import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Switch } from '@/components/ui/switch';
import Icon from '@/components/ui/icon';

interface Product {
  id: number;
  name: string;
  main_image_url?: string;
  price: number;
  currency: string;
  stock_quantity: number;
  is_featured: boolean;
  status: string;
}

interface PromotionCampaign {
  id: string;
  type: 'featured' | 'discount' | 'boost' | 'banner';
  title: string;
  description: string;
  productIds: number[];
  startDate: string;
  endDate: string;
  budget: number;
  status: 'active' | 'paused' | 'completed';
  stats: {
    views: number;
    clicks: number;
    sales: number;
    spent: number;
  };
}

interface ProductPromotionProps {
  products: Product[];
  className?: string;
}

export default function ProductPromotion({ products, className = "" }: ProductPromotionProps) {
  const [campaigns, setCampaigns] = useState<PromotionCampaign[]>([
    {
      id: '1',
      type: 'featured',
      title: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –æ—Ñ–∏—Å–Ω—ã—Ö —Å—Ç—É–ª—å–µ–≤',
      description: '–ü–æ–∫–∞–∑ –≤ –±–ª–æ–∫–µ "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º" –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ',
      productIds: [1, 2],
      startDate: '2024-01-15',
      endDate: '2024-02-15',
      budget: 15000,
      status: 'active',
      stats: { views: 8540, clicks: 234, sales: 12, spent: 8750 }
    },
    {
      id: '2',
      type: 'discount',
      title: '–°–∫–∏–¥–∫–∞ 20% –Ω–∞ —Å—Ç–æ–ª—ã',
      description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∫–∏–¥–∫–∞ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π',
      productIds: [3, 4],
      startDate: '2024-01-20',
      endDate: '2024-02-20',
      budget: 25000,
      status: 'active',
      stats: { views: 5420, clicks: 187, sales: 8, spent: 12300 }
    }
  ]);

  const [showCreateForm, setShowCreateForm] = useState(false);
  const [newCampaign, setNewCampaign] = useState({
    type: 'featured' as const,
    title: '',
    description: '',
    productIds: [] as number[],
    startDate: '',
    endDate: '',
    budget: 0
  });

  const promotionTypes = [
    {
      type: 'featured' as const,
      title: '–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä',
      description: '–ü–æ–∫–∞–∑ –≤ –±–ª–æ–∫–µ "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º" –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ',
      price: '50 —Ä—É–±/–¥–µ–Ω—å –∑–∞ —Ç–æ–≤–∞—Ä',
      icon: 'Star',
      color: 'bg-yellow-100 text-yellow-800'
    },
    {
      type: 'boost' as const,
      title: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ –ø–æ–∏—Å–∫–µ',
      description: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –ø–æ–∫–∞–∑ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ–∏—Å–∫–∞',
      price: '3 —Ä—É–±/–∫–ª–∏–∫',
      icon: 'TrendingUp',
      color: 'bg-blue-100 text-blue-800'
    },
    {
      type: 'banner' as const,
      title: '–ë–∞–Ω–Ω–µ—Ä–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞',
      description: '–†–∞–∑–º–µ—â–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ',
      price: '–æ—Ç 1000 —Ä—É–±/–¥–µ–Ω—å',
      icon: 'Monitor',
      color: 'bg-purple-100 text-purple-800'
    },
    {
      type: 'discount' as const,
      title: '–ê–≤—Ç–æ—Å–∫–∏–¥–∫–∏',
      description: '–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∫–∏–¥–æ–∫ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂',
      price: '5% –æ—Ç –ø—Ä–æ–¥–∞–∂–∏',
      icon: 'Percent',
      color: 'bg-red-100 text-red-800'
    }
  ];

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'active': return 'bg-green-100 text-green-800';
      case 'paused': return 'bg-yellow-100 text-yellow-800';
      case 'completed': return 'bg-gray-100 text-gray-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'active': return '–ê–∫—Ç–∏–≤–Ω–∞';
      case 'paused': return '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞';
      case 'completed': return '–ó–∞–≤–µ—Ä—à–µ–Ω–∞';
      default: return status;
    }
  };

  const handleCreateCampaign = () => {
    const campaign: PromotionCampaign = {
      id: (campaigns.length + 1).toString(),
      ...newCampaign,
      status: 'active',
      stats: { views: 0, clicks: 0, sales: 0, spent: 0 }
    };
    
    setCampaigns([...campaigns, campaign]);
    setNewCampaign({
      type: 'featured',
      title: '',
      description: '',
      productIds: [],
      startDate: '',
      endDate: '',
      budget: 0
    });
    setShowCreateForm(false);
  };

  const toggleCampaignStatus = (campaignId: string) => {
    setCampaigns(campaigns.map(campaign => 
      campaign.id === campaignId 
        ? { ...campaign, status: campaign.status === 'active' ? 'paused' : 'active' as any }
        : campaign
    ));
  };

  const calculateROI = (campaign: PromotionCampaign) => {
    const avgOrderValue = 2500; // –°—Ä–µ–¥–Ω–∏–π —á–µ–∫
    const revenue = campaign.stats.sales * avgOrderValue;
    const roi = campaign.stats.spent > 0 ? ((revenue - campaign.stats.spent) / campaign.stats.spent) * 100 : 0;
    return roi;
  };

  return (
    <div className={`space-y-6 ${className}`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex justify-between items-center">
        <div>
          <h2 className="text-2xl font-bold text-gray-900">–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤</h2>
          <p className="text-gray-600">–£–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–æ–¥–∞–∂–∏ —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</p>
        </div>
        <Button onClick={() => setShowCreateForm(true)} className="flex items-center gap-2">
          <Icon name="Plus" size={16} />
          –°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é
        </Button>
      </div>

      {/* –¢–∏–ø—ã –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Megaphone" size={20} />
            –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è
          </CardTitle>
          <CardDescription>
            –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–ø–æ—Å–æ–± –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {promotionTypes.map((promo) => (
              <div key={promo.type} className="p-4 border rounded-lg hover:bg-gray-50 transition-colors">
                <div className="flex items-start gap-3">
                  <div className={`p-2 rounded-lg ${promo.color}`}>
                    <Icon name={promo.icon as any} size={20} />
                  </div>
                  <div className="flex-1">
                    <h3 className="font-medium text-gray-900">{promo.title}</h3>
                    <p className="text-sm text-gray-600 mt-1">{promo.description}</p>
                    <div className="flex items-center justify-between mt-3">
                      <span className="text-sm font-medium text-green-600">{promo.price}</span>
                      <Button size="sm" variant="outline">
                        –ù–∞—Å—Ç—Ä–æ–∏—Ç—å
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Activity" size={20} />
            –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
          </CardTitle>
          <CardDescription>
            –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–µ–∫—É—â–∏–º–∏ —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {campaigns.map((campaign) => (
              <div key={campaign.id} className="p-4 border rounded-lg">
                <div className="flex items-start justify-between mb-4">
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-2">
                      <h3 className="font-medium text-gray-900">{campaign.title}</h3>
                      <Badge className={getStatusColor(campaign.status)}>
                        {getStatusText(campaign.status)}
                      </Badge>
                      <Badge variant="outline">
                        {promotionTypes.find(p => p.type === campaign.type)?.title}
                      </Badge>
                    </div>
                    <p className="text-sm text-gray-600 mb-3">{campaign.description}</p>
                    <div className="flex items-center gap-4 text-sm text-gray-600">
                      <span>üìÖ {campaign.startDate} - {campaign.endDate}</span>
                      <span>üí∞ –ë—é–¥–∂–µ—Ç: {campaign.budget.toLocaleString()} —Ä—É–±</span>
                      <span>üì¶ –¢–æ–≤–∞—Ä–æ–≤: {campaign.productIds.length}</span>
                    </div>
                  </div>
                  <div className="flex items-center gap-2">
                    <Switch 
                      checked={campaign.status === 'active'} 
                      onCheckedChange={() => toggleCampaignStatus(campaign.id)}
                    />
                    <Button variant="outline" size="sm">
                      <Icon name="Settings" size={14} />
                    </Button>
                  </div>
                </div>

                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–º–ø–∞–Ω–∏–∏ */}
                <div className="grid grid-cols-2 md:grid-cols-5 gap-4 pt-4 border-t">
                  <div className="text-center">
                    <div className="text-lg font-bold text-gray-900">
                      {campaign.stats.views.toLocaleString()}
                    </div>
                    <div className="text-xs text-gray-600">–ü–æ–∫–∞–∑—ã</div>
                  </div>
                  <div className="text-center">
                    <div className="text-lg font-bold text-gray-900">
                      {campaign.stats.clicks.toLocaleString()}
                    </div>
                    <div className="text-xs text-gray-600">–ö–ª–∏–∫–∏</div>
                  </div>
                  <div className="text-center">
                    <div className="text-lg font-bold text-gray-900">
                      {campaign.stats.sales}
                    </div>
                    <div className="text-xs text-gray-600">–ü—Ä–æ–¥–∞–∂–∏</div>
                  </div>
                  <div className="text-center">
                    <div className="text-lg font-bold text-gray-900">
                      {campaign.stats.spent.toLocaleString()} ‚ÇΩ
                    </div>
                    <div className="text-xs text-gray-600">–ü–æ—Ç—Ä–∞—á–µ–Ω–æ</div>
                  </div>
                  <div className="text-center">
                    <div className={`text-lg font-bold ${calculateROI(campaign) >= 0 ? 'text-green-600' : 'text-red-600'}`}>
                      {calculateROI(campaign).toFixed(0)}%
                    </div>
                    <div className="text-xs text-gray-600">ROI</div>
                  </div>
                </div>
              </div>
            ))}

            {campaigns.length === 0 && (
              <div className="text-center py-8">
                <Icon name="Megaphone" size={48} className="mx-auto text-gray-400 mb-4" />
                <h3 className="text-lg font-medium text-gray-900 mb-2">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π</h3>
                <p className="text-gray-600 mb-4">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Ä–µ–∫–ª–∞–º–Ω—É—é –∫–∞–º–ø–∞–Ω–∏—é –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤</p>
                <Button onClick={() => setShowCreateForm(true)}>
                  –°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é
                </Button>
              </div>
            )}
          </div>
        </CardContent>
      </Card>

      {/* –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–∏ */}
      {showCreateForm && (
        <Card className="border-blue-200">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Icon name="Plus" size={20} />
              –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é
            </CardTitle>
            <CardDescription>
              –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="campaignType">–¢–∏–ø –∫–∞–º–ø–∞–Ω–∏–∏</Label>
                <Select value={newCampaign.type} onValueChange={(value: any) => setNewCampaign({...newCampaign, type: value})}>
                  <SelectTrigger>
                    <SelectValue />
                  </SelectTrigger>
                  <SelectContent>
                    {promotionTypes.map((type) => (
                      <SelectItem key={type.type} value={type.type}>
                        {type.title}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
              </div>

              <div>
                <Label htmlFor="budget">–ë—é–¥–∂–µ—Ç (—Ä—É–±)</Label>
                <Input
                  id="budget"
                  type="number"
                  value={newCampaign.budget}
                  onChange={(e) => setNewCampaign({...newCampaign, budget: Number(e.target.value)})}
                  placeholder="10000"
                />
              </div>
            </div>

            <div>
              <Label htmlFor="title">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏</Label>
              <Input
                id="title"
                value={newCampaign.title}
                onChange={(e) => setNewCampaign({...newCampaign, title: e.target.value})}
                placeholder="–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏"
              />
            </div>

            <div>
              <Label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ</Label>
              <Textarea
                id="description"
                value={newCampaign.description}
                onChange={(e) => setNewCampaign({...newCampaign, description: e.target.value})}
                placeholder="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ü–µ–ª–∏ –∫–∞–º–ø–∞–Ω–∏–∏"
              />
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <Label htmlFor="startDate">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</Label>
                <Input
                  id="startDate"
                  type="date"
                  value={newCampaign.startDate}
                  onChange={(e) => setNewCampaign({...newCampaign, startDate: e.target.value})}
                />
              </div>

              <div>
                <Label htmlFor="endDate">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</Label>
                <Input
                  id="endDate"
                  type="date"
                  value={newCampaign.endDate}
                  onChange={(e) => setNewCampaign({...newCampaign, endDate: e.target.value})}
                />
              </div>
            </div>

            <div className="flex justify-end gap-2">
              <Button variant="outline" onClick={() => setShowCreateForm(false)}>
                –û—Ç–º–µ–Ω–∞
              </Button>
              <Button onClick={handleCreateCampaign}>
                –°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é
              </Button>
            </div>
          </CardContent>
        </Card>
      )}

      {/* –°–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é */}
      <Card className="border-green-200 bg-green-50">
        <CardHeader>
          <CardTitle className="flex items-center gap-2 text-green-900">
            <Icon name="Lightbulb" size={20} />
            –°–æ–≤–µ—Ç—ã –ø–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–º—É –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—é
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            <div className="flex items-start gap-3">
              <Icon name="Target" size={16} className="text-green-600 mt-0.5" />
              <div>
                <p className="font-medium text-green-900">–ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ –±—é–¥–∂–µ—Ç–∞</p>
                <p className="text-sm text-green-700">–¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–∞–º–ø–∞–Ω–∏–∏ —Å –Ω–µ–±–æ–ª—å—à–∏–º –±—é–¥–∂–µ—Ç–æ–º, –∑–∞—Ç–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä—É–π—Ç–µ —É—Å–ø–µ—à–Ω—ã–µ</p>
              </div>
            </div>
            <div className="flex items-start gap-3">
              <Icon name="Camera" size={16} className="text-green-600 mt-0.5" />
              <div>
                <p className="font-medium text-green-900">–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ = –±–æ–ª—å—à–µ –ø—Ä–æ–¥–∞–∂</p>
                <p className="text-sm text-green-700">–¢–æ–≤–∞—Ä—ã —Å —Ö–æ—Ä–æ—à–∏–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –ø—Ä–æ–¥–∞—é—Ç—Å—è –≤ 3 —Ä–∞–∑–∞ –ª—É—á—à–µ</p>
              </div>
            </div>
            <div className="flex items-start gap-3">
              <Icon name="BarChart3" size={16} className="text-green-600 mt-0.5" />
              <div>
                <p className="font-medium text-green-900">–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ ROI</p>
                <p className="text-sm text-green-700">–ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Ç–µ –∫–∞–º–ø–∞–Ω–∏–∏ —Å ROI –Ω–∏–∂–µ 50% –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ —É—Å–ø–µ—à–Ω—ã–µ</p>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}