import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Switch } from '@/components/ui/switch';
import Icon from '@/components/ui/icon';

interface PricingPlan {
  id: string;
  name: string;
  price: number;
  yearlyPrice: number;
  description: string;
  popular?: boolean;
  features: string[];
  limits: {
    products: number;
    photos: number;
    promotions: number;
    analytics: boolean;
    support: string;
    commission: number;
  };
  benefits: string[];
}

interface SupplierPricingPlansProps {
  currentPlan?: string;
  className?: string;
}

export default function SupplierPricingPlans({ 
  currentPlan = 'basic',
  className = "" 
}: SupplierPricingPlansProps) {
  const [isYearly, setIsYearly] = useState(false);

  const plans: PricingPlan[] = [
    {
      id: 'starter',
      name: '–°—Ç–∞—Ä—Ç–æ–≤—ã–π',
      price: 0,
      yearlyPrice: 0,
      description: '–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤',
      features: [
        '–î–æ 10 —Ç–æ–≤–∞—Ä–æ–≤',
        '–ë–∞–∑–æ–≤—ã–µ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–æ–≤',
        '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–ö–æ–º–∏—Å—Å–∏—è 8%'
      ],
      limits: {
        products: 10,
        photos: 3,
        promotions: 0,
        analytics: false,
        support: 'email',
        commission: 8
      },
      benefits: [
        '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –ø—Ä–æ–¥–∞–∂',
        '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ',
        '–û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
      ]
    },
    {
      id: 'basic',
      name: '–ë–∞–∑–æ–≤—ã–π',
      price: 2900,
      yearlyPrice: 29000,
      description: '–î–ª—è —Ä–∞—Å—Ç—É—â–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
      popular: true,
      features: [
        '–î–æ 100 —Ç–æ–≤–∞—Ä–æ–≤',
        '–î–æ 10 —Ñ–æ—Ç–æ –Ω–∞ —Ç–æ–≤–∞—Ä',
        '–ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–ö–æ–º–∏—Å—Å–∏—è 6%',
        '1 –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∞–∫—Ü–∏—è –≤ –º–µ—Å—è—Ü'
      ],
      limits: {
        products: 100,
        photos: 10,
        promotions: 1,
        analytics: true,
        support: 'chat',
        commission: 6
      },
      benefits: [
        '–°–Ω–∏–∂–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏ –Ω–∞ 2%',
        '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è',
        '–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä'
      ]
    },
    {
      id: 'professional',
      name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π',
      price: 5900,
      yearlyPrice: 59000,
      description: '–î–ª—è –∫—Ä—É–ø–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤',
      features: [
        '–î–æ 1000 —Ç–æ–≤–∞—Ä–æ–≤',
        '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ',
        '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–ö–æ–º–∏—Å—Å–∏—è 4%',
        '5 –∞–∫—Ü–∏–π –≤ –º–µ—Å—è—Ü',
        'API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
        '–ë—Ä–µ–Ω–¥–∏–Ω–≥ –º–∞–≥–∞–∑–∏–Ω–∞'
      ],
      limits: {
        products: 1000,
        photos: -1,
        promotions: 5,
        analytics: true,
        support: 'phone',
        commission: 4
      },
      benefits: [
        '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è',
        '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±—Ä–µ–Ω–¥–∏–Ω–≥',
        'API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
        '–í—ã–¥–µ–ª–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
        '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ø–æ–∏—Å–∫–µ'
      ]
    },
    {
      id: 'enterprise',
      name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π',
      price: 12900,
      yearlyPrice: 129000,
      description: '–î–ª—è –∫—Ä—É–ø–Ω–µ–π—à–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤',
      features: [
        '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤',
        '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ',
        '–ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ + BI',
        '24/7 –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–ö–æ–º–∏—Å—Å–∏—è 2%',
        '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏',
        '–ü–æ–ª–Ω—ã–π API',
        '–ë–µ–ª—ã–π –ª–µ–π–±–ª',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è'
      ],
      limits: {
        products: -1,
        photos: -1,
        promotions: -1,
        analytics: true,
        support: '24/7',
        commission: 2
      },
      benefits: [
        '–°–∞–º–∞—è –Ω–∏–∑–∫–∞—è –∫–æ–º–∏—Å—Å–∏—è',
        '–ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –±—Ä–µ–Ω–¥–∞',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è',
        '–í—ã–¥–µ–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
        '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é'
      ]
    }
  ];

  const getPrice = (plan: PricingPlan) => {
    const price = isYearly ? plan.yearlyPrice : plan.price;
    const savings = isYearly ? (plan.price * 12 - plan.yearlyPrice) : 0;
    return { price, savings };
  };

  const isPlanCurrent = (planId: string) => planId === currentPlan;

  const getRecommendedUpgrade = () => {
    const currentIndex = plans.findIndex(p => p.id === currentPlan);
    if (currentIndex < plans.length - 1) {
      return plans[currentIndex + 1];
    }
    return null;
  };

  const recommendedPlan = getRecommendedUpgrade();

  return (
    <div className={`space-y-8 ${className}`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <h2 className="text-3xl font-bold text-gray-900 mb-4">–¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤</h2>
        <p className="text-lg text-gray-600 mb-6">
          –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–≤–∏—Ç—å –≤–∞—à –±–∏–∑–Ω–µ—Å –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
        </p>
        
        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –º–µ—Å—è—á–Ω—ã–π/–≥–æ–¥–æ–≤–æ–π */}
        <div className="flex items-center justify-center gap-3 mb-8">
          <span className={`text-sm ${!isYearly ? 'font-medium text-gray-900' : 'text-gray-600'}`}>
            –ú–µ—Å—è—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞
          </span>
          <Switch checked={isYearly} onCheckedChange={setIsYearly} />
          <span className={`text-sm ${isYearly ? 'font-medium text-gray-900' : 'text-gray-600'}`}>
            –ì–æ–¥–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞
          </span>
          {isYearly && (
            <Badge variant="secondary" className="bg-green-100 text-green-800">
              –≠–∫–æ–Ω–æ–º–∏—è –¥–æ 17%
            </Badge>
          )}
        </div>
      </div>

      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –∞–ø–≥—Ä–µ–π–¥—É */}
      {recommendedPlan && (
        <Card className="border-blue-200 bg-blue-50">
          <CardContent className="pt-6">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <div className="p-2 bg-blue-100 rounded-lg">
                  <Icon name="TrendingUp" size={20} className="text-blue-600" />
                </div>
                <div>
                  <h3 className="font-medium text-blue-900">
                    –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø–ª–∞–Ω "{recommendedPlan.name}"
                  </h3>
                  <p className="text-sm text-blue-700">
                    –°–Ω–∏–∑–∏—Ç–µ –∫–æ–º–∏—Å—Å–∏—é –¥–æ {recommendedPlan.limits.commission}% –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ä–æ—Å—Ç–∞
                  </p>
                </div>
              </div>
              <Button variant="outline" className="border-blue-300 text-blue-700 hover:bg-blue-100">
                –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ
              </Button>
            </div>
          </CardContent>
        </Card>
      )}

      {/* –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        {plans.map((plan) => {
          const { price, savings } = getPrice(plan);
          const isCurrent = isPlanCurrent(plan.id);
          
          return (
            <Card 
              key={plan.id} 
              className={`relative ${plan.popular ? 'border-blue-300 shadow-lg scale-105' : ''} ${
                isCurrent ? 'border-green-300 bg-green-50' : ''
              }`}
            >
              {plan.popular && (
                <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                  <Badge className="bg-blue-600 hover:bg-blue-700">
                    üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                  </Badge>
                </div>
              )}

              {isCurrent && (
                <div className="absolute -top-3 right-4">
                  <Badge className="bg-green-600 hover:bg-green-700">
                    ‚úÖ –¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω
                  </Badge>
                </div>
              )}

              <CardHeader className="text-center pb-4">
                <CardTitle className="text-xl font-bold text-gray-900">
                  {plan.name}
                </CardTitle>
                <CardDescription className="text-sm">
                  {plan.description}
                </CardDescription>
                
                <div className="mt-4">
                  <div className="flex items-baseline justify-center">
                    <span className="text-3xl font-bold text-gray-900">
                      {price.toLocaleString()}
                    </span>
                    <span className="text-gray-600 ml-1">
                      ‚ÇΩ/{isYearly ? '–≥–æ–¥' : '–º–µ—Å'}
                    </span>
                  </div>
                  
                  {isYearly && savings > 0 && (
                    <div className="text-sm text-green-600 mt-1">
                      –≠–∫–æ–Ω–æ–º–∏—è {savings.toLocaleString()} ‚ÇΩ/–≥–æ–¥
                    </div>
                  )}
                  
                  <div className="text-xs text-gray-500 mt-2">
                    –ö–æ–º–∏—Å—Å–∏—è —Å –ø—Ä–æ–¥–∞–∂: {plan.limits.commission}%
                  </div>
                </div>
              </CardHeader>

              <CardContent>
                <div className="space-y-3 mb-6">
                  {plan.features.map((feature, index) => (
                    <div key={index} className="flex items-center gap-2">
                      <Icon name="Check" size={16} className="text-green-500 flex-shrink-0" />
                      <span className="text-sm text-gray-700">{feature}</span>
                    </div>
                  ))}
                </div>

                <Button 
                  className={`w-full ${isCurrent 
                    ? 'bg-green-600 hover:bg-green-700' 
                    : plan.popular 
                      ? 'bg-blue-600 hover:bg-blue-700' 
                      : ''
                  }`}
                  variant={isCurrent ? 'default' : plan.popular ? 'default' : 'outline'}
                  disabled={isCurrent}
                >
                  {isCurrent ? '–ê–∫—Ç–∏–≤–Ω—ã–π –ø–ª–∞–Ω' : '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω'}
                </Button>

                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
                {plan.benefits.length > 0 && (
                  <div className="mt-4 pt-4 border-t">
                    <h4 className="text-xs font-medium text-gray-900 mb-2 uppercase tracking-wide">
                      –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
                    </h4>
                    <div className="space-y-1">
                      {plan.benefits.map((benefit, index) => (
                        <div key={index} className="flex items-center gap-2">
                          <Icon name="Star" size={12} className="text-yellow-500 flex-shrink-0" />
                          <span className="text-xs text-gray-600">{benefit}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          );
        })}
      </div>

      {/* –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="BarChart3" size={20} />
            –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤
          </CardTitle>
          <CardDescription>
            –°—Ä–∞–≤–Ω–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö —Ç–∞—Ä–∏—Ñ–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="overflow-x-auto">
            <table className="w-full text-sm">
              <thead>
                <tr className="border-b">
                  <th className="text-left py-3 font-medium text-gray-900">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</th>
                  {plans.map((plan) => (
                    <th key={plan.id} className="text-center py-3 font-medium text-gray-900">
                      {plan.name}
                    </th>
                  ))}
                </tr>
              </thead>
              <tbody>
                <tr className="border-b">
                  <td className="py-3 text-gray-700">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤</td>
                  {plans.map((plan) => (
                    <td key={plan.id} className="text-center py-3">
                      {plan.limits.products === -1 ? '‚àû' : plan.limits.products}
                    </td>
                  ))}
                </tr>
                <tr className="border-b">
                  <td className="py-3 text-gray-700">–§–æ—Ç–æ –Ω–∞ —Ç–æ–≤–∞—Ä</td>
                  {plans.map((plan) => (
                    <td key={plan.id} className="text-center py-3">
                      {plan.limits.photos === -1 ? '‚àû' : plan.limits.photos}
                    </td>
                  ))}
                </tr>
                <tr className="border-b">
                  <td className="py-3 text-gray-700">–ê–∫—Ü–∏–∏ –≤ –º–µ—Å—è—Ü</td>
                  {plans.map((plan) => (
                    <td key={plan.id} className="text-center py-3">
                      {plan.limits.promotions === -1 ? '‚àû' : plan.limits.promotions || '‚Äî'}
                    </td>
                  ))}
                </tr>
                <tr className="border-b">
                  <td className="py-3 text-gray-700">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</td>
                  {plans.map((plan) => (
                    <td key={plan.id} className="text-center py-3">
                      {plan.limits.analytics ? (
                        <Icon name="Check" size={16} className="text-green-500 mx-auto" />
                      ) : (
                        <Icon name="X" size={16} className="text-red-500 mx-auto" />
                      )}
                    </td>
                  ))}
                </tr>
                <tr className="border-b">
                  <td className="py-3 text-gray-700">–ö–æ–º–∏—Å—Å–∏—è</td>
                  {plans.map((plan) => (
                    <td key={plan.id} className="text-center py-3 font-medium">
                      {plan.limits.commission}%
                    </td>
                  ))}
                </tr>
              </tbody>
            </table>
          </div>
        </CardContent>
      </Card>

      {/* FAQ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="HelpCircle" size={20} />
            –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            <div>
              <h4 className="font-medium text-gray-900 mb-2">–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–ª–∞–Ω –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è?</h4>
              <p className="text-sm text-gray-600">
                –î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å –ø–ª–∞–Ω –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. –ü—Ä–∏ –ø–æ–Ω–∏–∂–µ–Ω–∏–∏ –ø–ª–∞–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ä–∞—Å—á–µ—Ç–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ.
              </p>
            </div>
            <div>
              <h4 className="font-medium text-gray-900 mb-2">–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤?</h4>
              <p className="text-sm text-gray-600">
                –ü—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏ –∫ –ª–∏–º–∏—Ç–∞–º –º—ã –ø—Ä–∏—à–ª–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤ –º—ã –ø—Ä–µ–¥–ª–æ–∂–∏–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–π –ø–ª–∞–Ω.
              </p>
            </div>
            <div>
              <h4 className="font-medium text-gray-900 mb-2">–ï—Å—Ç—å –ª–∏ —Å–∫–∏–¥–∫–∏ –¥–ª—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤?</h4>
              <p className="text-sm text-gray-600">
                –î–∞, –≥–æ–¥–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞ –¥–∞–µ—Ç —Å–∫–∏–¥–∫—É –¥–æ 17%. –î–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è.
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}